#include "philo_bonus.h"

void    write_log(t_data *data, size_t id, char *log)
{
	sem_wait(data->print);
	printf("%zu %zu %s\n", get_current_time(data), id, log);
	sem_post(data->print);
}

void*   death_checker(void *arg)
{
	t_philo     *philo;
	t_data      *data;
	time_t      last_meal;

	philo = (t_philo *)arg;
	data = philo->data;
	last_meal = get_current_time(data);
	while (1)
	{
		usleep(1000); // Check every 1ms
		if (get_current_time(data) - last_meal >= data->time_to_die)
		{
			write_log(data, philo->id, "died");
			sem_post(data->is_died);
			exit(0);
		}
	}
	return (NULL);
}

void	routine(t_data *data, t_philo *philo)
{
	pthread_t	monitor;
	time_t		last_meal;

	// printf("in routine\n");
	last_meal = get_current_time(data);
	pthread_create(&monitor, NULL, death_checker, philo);
	while (1)
	{
		sem_wait(data->forks);
		write_log(data, philo->id, "has taken a fork");
		sem_wait(data->forks);
		write_log(data, philo->id, "has taken a fork");
		write_log(data, philo->id, "is eating");
		usleep(data->time_to_eat * 1000);
		last_meal = get_current_time(data); // data race !!
		sem_post(data->forks);
		sem_post(data->forks);
		write_log(data, philo->id, "is sleeping");
		usleep(data->time_to_sleep * 1000);
		write_log(data, philo->id, "is thinking");
	}
}